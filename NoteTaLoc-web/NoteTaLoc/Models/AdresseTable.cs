//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

namespace NoteTaLoc.Models
{
    public partial class AdresseTable
    {

        public AdresseTable()

        {
            this.LocataireTables = new HashSet<LocataireTable>();
            this.NoteTables = new HashSet<NoteTable>();
            this.ProprietaireTables = new HashSet<ProprietaireTable>();
        }
    
        public int AdresseId { get; set; }
        public string AptNo { get; set; }
        public Nullable<int> RueNo { get; set; }
        public string Rue { get; set; }
        public string Ville { get; set; }
        public string Province { get; set; }
        public string CodePostal { get; set; }
        public string Pays { get; set; }
        public string GeoCodeResponse { get; set; }
        public Nullable<decimal> Longitude { get; set; }
        public Nullable<decimal> Lattitude { get; set; }
    
        public virtual ICollection<LocataireTable> LocataireTables { get; set; }
        public virtual ICollection<NoteTable> NoteTables { get; set; }
        public virtual ICollection<ProprietaireTable> ProprietaireTables { get; set; }

        public string AdresseLine
        {
            get
            { return (RueNo + " " + Rue + " " + (string.IsNullOrEmpty(AptNo) ? "" : "App." + AptNo) + " " + Ville + " " + Province + " " + Pays).Trim(); }
        }

        public Single AvgNote
        {
            get
            {
                Single avg = 0;
                foreach (NoteTable n in NoteTables)
                {
                    avg = avg + (Single)n.Note;
                }
                return avg / NoteTables.Count;
            }
        }
    }
}
