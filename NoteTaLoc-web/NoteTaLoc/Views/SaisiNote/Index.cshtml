@{
    ViewBag.Title = "Index";
}
@model NoteTaLoc.Models.SaisiNoteForm

<link rel="stylesheet" href="~/Content/themes/base/jquery.ui.all.css">
<link rel="stylesheet" href="~/src/demo2.css">
<script src="http://maps.google.com/maps/api/js?sensor=false"></script>

<script src="~/lib/jquery-1.4.4.min.js"></script>
<script src="~/lib/jquery-ui-1.8.7.min.js"></script>
<script src="~/src/jquery.ui.addresspicker.js"></script>

<script>
    
    $(document).ready(function () {
        document.getElementById("addresspicker_map").onclick = function () {
            document.getElementById("addresspicker_map").value = "";
        }
    });

    $(function () {
        var addresspicker = $("#addresspicker").addresspicker();
        var addresspickerMap = $("#addresspicker_map").addresspicker({
            regionBias: "ca",
            elements: {
                map: "#map",
                lat: "#lat",
                lng: "#lng",
                locality: '#locality',
                administrative_area_level_2: '#administrative_area_level_2',
                administrative_area_level_1: '#administrative_area_level_1',
                country: '#country',
                postal_code: '#postal_code',
                type: '#type'
            }
        });
        var gmarker = addresspickerMap.addresspicker("marker");
        gmarker.setVisible(true);
        addresspickerMap.addresspicker("updatePosition");

        $('#reverseGeocode').change(function () {
            $("#addresspicker_map").addresspicker("option", "reverseGeocode", ($(this).val() === 'true'));
        });

        $("#addresspicker_map").focus(function () {
            $(this).css({ 'background': '#e8edf1' });
        });

        $("#addresspicker_map").blur(function () {
            if ($('#addresspicker_map').val() == '' || $('#addresspicker_map').val() == null) {
                $(this).css({ 'background': 'url(../images/search-icon.png) no-repeat' });
            }
            else {
                $(this).css({ 'background': '#e8edf1' });
            }
        });
    });

    function AddResult(txt, css) {
        $("#Results").empty();
        var div = $('<div></div>').addClass(css).html(txt)
        $("#Results").append(div);
    }

    function Validateaddress() {
        var add = $('#addresspicker_map').val();
        var pays = $('#country').val();
        var code = $('#postal_code').val();
        var province = $('#administrative_area_level_1').val();
        var Ville = $('#locality').val();
        var appartement = $('#NoAppartement').val();
        var longitude = $('#lng').val();
        var latitude = $('#lat').val();
        var type = $('#type').val();
        var note = $("input[name=group1]:radio:checked").val();
        if (add == '' || add == null) {
            AddResult("Choisir l'adresse de l'appartement à noter!", "resultInvalid");
            return;
        }
        if (type != 'street_address') {
            AddResult("Vous devez choisir l'adresse d'un appartement valide!", "resultInvalid");
            return;
        }
        if (note == null) {
            AddResult("Sélectionner une note!", "resultInvalid");
            return;
        }
        var jsonText = JSON.stringify({ address: add, country: pays, zip: code, provincia: province, citta: Ville, appart: appartement, lng: longitude, lat: latitude, nota: note });
        $.ajax({
            type: "POST",
            url: "/SaisiNote/NoterAppartement", // the method we are calling
            contentType: "application/json; charset=utf-8",
            data: jsonText,
            dataType: "json",
            success: function (result) {

                if (result.returnValue == "Add") {
                    AddResult("Enregistrement reussie!", "resultValid");
                }
                else if (result.returnValue == "Update") {
                    AddResult("Modification reussie!", "resultValid");
                }

                else {
                    AddResult("La note n'a pas été enregistrée. Réessayer plus tard!", "resultInvalid");
                }
            },
            error: function (result) {
                AddResult("La note n'a pas été enregistrée. Réessayer plus tard!", "resultInvalid");
            }
        });
    }
</script>

<div class="row-fluid">
    <div class="span8 offset2">
        <form class="navbar-search float-none">
            @Html.TextBox("addresspicker_map", "Utilisez la recherche pour pre-remplir l'adresse ... ", new { id = "addresspicker_map" })
        </form>
    </div>
</div>
@using (Html.BeginForm()) {
<div class="row-fluid">
    <div class="span8 offset2 background_div">
        <div class="row-fluid">
            <div class="span12">
                    <div id="map" style="width: 100%; height: 250px"></div>
                    <div id="location" class=""></div>  
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12">
                <div class="content-wrapper">
                    <hgroup class="title">
                        <h4>NOTEZ VOTRE APPARTEMENT</h4>
                    </hgroup>
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12">
                <div class="content-wrapper">
                    <hgroup class="title">
                        <h5>Informations Generales</h5>
                    </hgroup>
                </div>
            </div>
        </div>
        <div class="row-fluid">
            <div class="span12">
                <div id="Results"></div>
            </div>
        </div>
        <div class="row-fluid margin-bottom">
            <div class="span3">
                No appartement :
            </div>    
            <div class="span3">
                @Html.TextBoxFor(m => m.Appartement)    
            </div>
            <div class="span3">
            </div>    
            <div class="span3">
            </div>
        </div>
        <div class="row-fluid margin-bottom">
            <div class="span3">
                Ville :
            </div>    
            <div class="span3">
                @Html.TextBoxFor(m => m.Localite)    
            </div>
            <div class="span3">
                Pays :
            </div>    
            <div class="span3">
                @Html.TextBoxFor(m => m.Pays)    
            </div>
        </div>
        <div class="row-fluid">
            <div class="span3">
                Province :
            </div>    
            <div class="span3">
                @Html.TextBoxFor(m => m.Region)
            </div>
            <div class="span3">
                Code postal :
            </div>    
            <div class="span3">
                @Html.TextBoxFor(m => m.CodePostal)
            </div>
        </div>       
        <div class="row-fluid">
            <div class="span12">
                <div class="content-wrapper">
                    <h5>
                        Details
                    </h5>
               </div>
            </div>
        </div>
        <div class="row-fluid">
        @if (HttpContext.Current.Application["Categories"] != null)
        {
            NoteTaLoc.Utilitary.CategoryStorage cats = (NoteTaLoc.Utilitary.CategoryStorage)HttpContext.Current.Application["Categories"];
            NoteTaLoc.Utilitary.Categories myCat = cats.getCategoriesByLanguage("fr");
                
            foreach(NoteTaLoc.Utilitary.Category tmpCat in myCat.categoriesList)
            {
                List<NoteTaLoc.Utilitary.Criteria>.Enumerator critEnum = tmpCat.criteriasList.GetEnumerator();
                <div class="row-fluid">
                    <div class="span12">
                        <h5>@tmpCat.libelle</h5>
                    </div>
                </div>
                                
                while (critEnum.MoveNext())
                {
                    NoteTaLoc.Utilitary.Criteria tmpCrit = critEnum.Current;
                    <div class="row-fluid">    
                        <div class="span3">
                            @tmpCrit.libelle
                        </div>    
                        <div class="span3">
                            <input id="crit_@tmpCrit.criteriaId">
                        </div>
                        @{critEnum.MoveNext();
                        tmpCrit = critEnum.Current;
                        }@if(tmpCrit !=null){ 
                        <div class="span3">
                            @tmpCrit.libelle
                        </div>    
                        <div class="span3">
                            <input id="crit_@tmpCrit.criteriaId">
                        </div>}
                    </div>
                }
            }
        }
        </div>           
        <div class="row-fluid">
            <div class="span12">
                <button onclick="javascript:Validateaddress()" class='input btn btn-large btn-block btn-primary'>Noter</button>
            </div>                        
        </div>
    </div>
</div>
}
<div style="margin:auto;">
     <input id="lat" disabled="disabled" style="visibility: hidden;">
    <input id="lng" disabled="disabled" style="visibility: hidden;">
    <input id="type" disabled="disabled" style="visibility: hidden;" />
    <input id="indirizzo" disabled="disabled" style="visibility: hidden;" />
</div>
