@model NoteTaLoc.Utilitary.CategoryStorage
    

<!-- Template adresse -->
<script id="adresse-simple-template" type="text/x-handlebars-template">  
<div class="span12">
    <div class="span8" id="adresse"><h1>{{Address}}</h1></div>
    <div class="span4" id="noteTotale"><h2>{{Score}} / 5</h2></div>
</div>
</script>

<!-- Template adresse -->
<script id="adresse-template" type="text/x-handlebars-template">  
<div class="span6">
    <div class="span8" id="adresse"><h1>{{adresse}}</h1></div>
    <div class="span4" id="noteTotale"><h2>{{moyenneAdresse}} / 5</h2></div>
</div>
<div class="span6">
    <div id="myCarousel" class="carousel slide">
        <ol class="carousel-indicators" id="img_indicators">
    {{#each images}}
            <li data-target="#myCarousel" data-slide-to="{{image}}"></li>
    {{/each}}
        </ol>
        <!-- Carousel items -->
        <div class="carousel-inner" id="img_items">
    {{#each images}}
            <div class="item"><img src="{{uri}}"/></div>
    {{/each}}
        </div>
        <!-- Carousel nav -->
        <a class="carousel-control left" href="#myCarousel" data-slide="prev">&lsaquo;</a>
        <a class="carousel-control right" href="#myCarousel" data-slide="next">&rsaquo;</a>
    </div>
</div>
</script>

<!-- Template accordéon -->
<script id="users-template" type="text/x-handlebars-template">  
{{#each users}} 
    <div style='margin-top: 2px;'>
        <div style='float: left;'>
            <img alt='Note' src='http://www.jqwidgets.com/jquery-widgets-demo/images/notesIcon.png' />
        </div>
        <div style='margin-left: 4px; float: left;'>{{name}} - {{date}} - [{{note}}]</div>
    </div>
    <div>
        <ul>
            <li>D&eacute;tails : </li>
            {{#each categories}}
                <ul>
                    <li>{{id}}</li>
                    {{#each criteres}}
                        <ul>
                            <li>{{id}} [{{note}}]</li>
                        </ul>
                    {{/each}}
                </ul>
            {{/each}}
        </ul>
        <ul>
            <li>Commentaires : </li>
            {{#each comments}}
                <ul>
                    <li>{{date}} - {{titre}} - {{text}}</li>
                </ul>
            {{/each}}
        </ul>
    </div>
{{/each}}
</script>
@section Scripts {
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"></script>
    <script src="Scripts/markerclusterer_compiled.js" type="text/javascript"></script>

    <script type="text/javascript">
        var map = null;
        var markerClusterer = null;

        $(function () {
            try {
                initMap();
                initSearchBox();
                loadMarkers();
            }
            catch (e) {
                Log("initialize", e);
                var msg = "Erreur d'initialisation de la carte";
                $("#map_canvas").html("<center><span class='label label-important'><i class='icon-white icon-exclamation-sign'></i>&nbsp;" +
                                      msg + "&nbsp;</span></center>")

            }
        });


        function initMap() {
            var mapOptions = {
                zoom: 4,
                center: new google.maps.LatLng(0, 0),
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                streetViewControl: true,
                mapTypeControlOptions: {
                    style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
                },
                zoomControl: true,
                zoomControlOptions: {
                    style: google.maps.ZoomControlStyle.LARGE
                },
                backgroundColor: "#E0E0E0"
            };
            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            var worldBounds = new google.maps.LatLngBounds(new google.maps.LatLng(-75, -180), new google.maps.LatLng(75, 180));
            map.fitBounds(worldBounds);
        }

        function initSearchBox() {

            var txtBeforeChange = null;
            var input = $("#searchText").get(0);
            var _addEventListener = (input.addEventListener) ? input.addEventListener : input.attachEvent;

            var addEventListenerWrapper = function (type, listener) {
                if (type == "keydown") {
                    var orig_listener = listener;
                    listener = function (event) {
                        var suggestion_selected = $(".pac-item.pac-selected").length > 0;
                        if (event.which == 13 && !suggestion_selected) {
                            var simulated_downarrow = $.Event("keydown", { keyCode: 40, which: 40 })
                            orig_listener.apply(input, [simulated_downarrow]);
                        }
                        if (event.which == 27) {
                            $("#searchText").val(txtBeforeChange);
                        }

                        orig_listener.apply(input, [event]);
                    };
                }
                _addEventListener.apply(input, [type, listener]);
            }


            if (input.addEventListener)
                input.addEventListener = addEventListenerWrapper;
            else if (input.attachEvent)
                input.attachEvent = addEventListenerWrapper;

            var autocomplete = new google.maps.places.Autocomplete(input, { types: ['geocode'] });
            google.maps.event.addListener(autocomplete, "place_changed", function () {
                $('#searchBtn').click();
            });

            $('#searchBtn').click(function () {
                try {
                    var place = autocomplete.getPlace();

                    if (!place || !place.geometry) {
                        $("#searchBox span").css("display", "inline-block")
                    }
                    else {
                        $("#searchBox span").hide();
                        txtBeforeChange = $("#searchText").val();
                        if (place.geometry.viewport) {
                            map.fitBounds(place.geometry.viewport);
                        }
                        else {
                            map.setCenter(place.geometry.location);
                            map.setZoom(17);  // Why 17? Because it looks good.
                        }
                    }
                }
                catch (e) {
                }
            });
        }

        function loadMarkers() {
            $("<div/>").addClass("map-loading").insertAfter($("#map_canvas"));

            $.ajax({
                type: "GET",
                url: '/Search/LoadMarkers',
                dataType: "json",
                cache: false,
                success: function (data) {
                    var markers = [];
                    $.each(data, function (index, value) {
                        markers.push(buildMarker(value));
                    });
                    if (markerClusterer) {
                        markerClusterer.clearMarkers();
                    }
                    markerClusterer = new MarkerClusterer(map, markers, {
                        maxZoom: 14,
                        minimumClusterSize: 5
                    });

                    $("#searchText").removeAttr("disabled");
                    $("#searchBtn").removeAttr("disabled");
                },
                error: function (xmlRequest) {
                    var msg = "Erreur : " + (xmlRequest.responseJSON ? xmlRequest.responseJSON : xmlRequest.statusText);
                    $("<div/>").addClass("map-error")
                               .html("<center><span class='label label-important' style='margin-top:50px'><i class='icon-white icon-exclamation-sign'></i>&nbsp;" +
                                      msg + "&nbsp;</span></center>")
                               .insertAfter($("#map_canvas"));
                },
                complete: function () {
                    $(".map-loading").remove();
                }
            });
        }

        function buildMarker(data) {
            var rating = Math.round(data.Score) + "0";
            var latLng = new google.maps.LatLng(data.Latitude, data.Longitude);

            var icon = new google.maps.MarkerImage("/Content/Images/Icon_" + rating + ".png",
                new google.maps.Size(32.0, 32.0),
                new google.maps.Point(0, 0),
                new google.maps.Point(16.0, 16.0));

            var shadow = new google.maps.MarkerImage("Content/Images/Icon_shadow.png",
                new google.maps.Size(49.0, 32.0),
                new google.maps.Point(0, 0),
                new google.maps.Point(16.0, 16.0));

            var marker = new google.maps.Marker({
                position: latLng,
                draggable: false,
                icon: icon,
                shadow: shadow,
                title: data.Address,
                url: "#myModal"
            });

            var infowindow = new google.maps.InfoWindow(
                {
                    content: '<div id="content">'+'<div id="siteNotice">'+'</div>'+
      '<h1 id="firstHeading" class="firstHeading">' + buildModalAdresse(data) + '</h1>'+
      '<div id="bodyContent">'+
      buildModalUtilisateurs() +
      '</div>'+
      '</div>'
                }
                );

            google.maps.event.addListener(marker, 'click', function () {
                clickMarker(marker, data);
                infowindow.open(map, marker);
               
            });

            return marker;
        }

        function clickMarker(marker, data) {
            console.log(data);
            map.setZoom(9);
            map.setCenter(marker.getPosition());

            if (marker.getIcon().url.indexOf("_Gray.png") == -1) {
                var url = marker.getIcon().url.replace(".png", "_Gray.png");
                var icon = new google.maps.MarkerImage(url,
                    new google.maps.Size(32.0, 32.0),
                    new google.maps.Point(0, 0),
                    new google.maps.Point(16.0, 16.0));
                marker.setIcon(icon);
            }
        }

        var context = { //simulation du JSON fourni
            adresseId: "20135411",
            adresse: "1155 Rue Metcalfe, Montréal, QC H3B 4J5, Canada",
            moyenneAdresse: 5,
            images: [{ image: 0, uri: "/Images/Story3/sunlife_building_01.jpg" },
                      { image: 1, uri: "/Images/Story3/sunlife_building_02.jpg" },
                      { image: 2, uri: "/Images/Story3/sunlife_building_03.jpg" }],
            users: [
                {
                    name: "Arnaud", date: "22/12/2012", note: 4,
                    comments: [
                      { titre: "titre 1", date: "22/12/2012", text: "bla bla bla" },
                      { titre: "titre 2", date: "22/12/2012", text: "bla2 bla2 bla2" }
                    ],
                    categories: [
                      {
                          id: 100,
                          criteres: [
                              { id: 1, note: 4 },
                              { id: 2, note: 3 },
                              { id: 3, note: 5 }
                          ]
                      },
                          {
                              id: 200,
                              criteres: [
                                  { id: 1, note: 4 },
                                  { id: 2, note: 3 },
                                  { id: 3, note: 5 }
                              ]
                          }
                    ]
                },
                              {
                                  name: "Duc", date: "12/05/2011", note: 3,
                                  comments: [
                                    { titre: "titre 1", date: "12/05/2011", text: "bla bla bla" },
                                    { titre: "titre 2", date: "12/05/2011", text: "bla2 bla2 bla2" }
                                  ],
                                  categories: [
                                    {
                                        id: 100,
                                        criteres: [
                                            { id: 1, note: 4 },
                                            { id: 2, note: 3 },
                                            { id: 3, note: 5 }
                                        ]
                                    },
                                         {
                                             id: 300,
                                             criteres: [
                                                 { id: 1, note: 4 },
                                                 { id: 2, note: 3 },
                                                 { id: 3, note: 5 }
                                             ]
                                         }
                                  ]
                              },
                                          {
                                              name: "Christophe", date: "05/12/2010", note: 2,
                                              comments: [
                                                  { titre: "titre 1", date: "05/12/2010", text: "bla bla bla" },
                                                  { titre: "titre 2", date: "05/12/2010", text: "bla2 bla2 bla2" }
                                              ],
                                              categories: [
                                                    {
                                                        id: 200,
                                                        criteres: [
                                                            { id: 1, note: 4 },
                                                            { id: 2, note: 3 },
                                                            { id: 3, note: 5 }
                                                        ]
                                                    },
                                                        {
                                                            id: 300,
                                                            criteres: [
                                                                { id: 1, note: 4 },
                                                                { id: 2, note: 3 },
                                                                { id: 5, note: 5 }
                                                            ]
                                                        }
                                              ]
                                          }
            ]
        };

        // les libellés correspondants
        var libellesCategories = $.ajax({
            type: "GET",
            url: '/CategoryStorage/GetCategory',
            data: 'language=fr',
            dataType: "json",
            cache: false});
            

        var libellesCriteres = $.ajax({
            type: "GET",
            url: '/CategoryStorage/GetCriteria',
            data: 'language=fr',
            dataType: "json",
            cache: false
        });
        function buildModalAdresse(data) {
            var adresseSimple = $("#adresse-simple-template").html();
            var adresseSimpleTpl = Handlebars.compile(adresseSimple);

            var adresse = $("#adresse-template").html();
            var adresseTpl = Handlebars.compile(adresse);

            var adresseCtx = (context.images) ? adresseTpl(data) : adresseSimpleTpl(data);
            $("#adresseDetails").html(adresseCtx);

            return $("#adresseDetails").html(adresseCtx);
        }


        function buildModalUtilisateurs() {

            var theme = "bootstrap"; //style pour le composant jqxNavigationBar
            var source = $("#users-template").html();
            var template = Handlebars.compile(source);

            var libelles = libellesCriteres.concat(libellesCategories); // on groupe le tout en un seul dictonnaire

            $.each(context.users, function () { // on réalise le mapping en utilisant des fonctions jQuery standard
                $.each(this.categories, function () {
                    var id = this.id;
                    var test = $.grep(libelles, function (e) { return e.ID == id; });
                    if (test[0] != null) {
                        this.id = test[0].LIB;
                    }
                    $.each(this.criteres, function () {
                        var id = this.id;
                        var test = $.grep(libelles, function (e) { return e.ID == id; });
                        if (test[0] != null) {
                            this.id = test[0].LIB;
                        }
                    });
                });
            });

            var code = template(context); // remplissage du template avec les données issues du contexte

            $("#jqxNavigationBar").html(code);
            $("#jqxNavigationBar").jqxNavigationBar({ width: '100%', expandMode: 'multiple', theme: theme });

            $("#img_indicators li:first").addClass("active");
            $("#img_items div:first").addClass("active");

            return code;
        }


    </script>
}
@section Styles
{
    <link href="Content/Search.css" rel="stylesheet" />
    <!--[if lt IE 9]>
  <style type="text/css">
        .map-loading
        {
            background: transparent;
            filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#80FFFFFF,endColorstr=#80FFFFFF);
            zoom: 1;
            position: absolute;
            width: 100%;
            height: 100%;
            margin: 0px;
            padding: 0px;
            z-index: 1000;
            top: 0px;
            left: 0px;
            background-image: url("Loading.gif");
            background-position: center center;
            background-repeat: no-repeat;
        }
  </style>
<![endif]-->
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row-fluid">
    <div class="span10 offset1">
        @*<div class="span12">*@
            <div id="searchBox" class="input-append span12">
                <input id="searchText" type="text" disabled="disabled" value="" class="input-medium"
                    placeholder="Rechercher un lieu" />
                <button id="searchBtn" class="btn" type="button" disabled="disabled">
                    <i class="icon-search"></i>
                </button>
                <br />
                <span class="label label-important"><i class="icon-white icon-exclamation-sign"></i>
                    &nbsp;Aucun résultat</span>
            </div>
        @*</div>*@
    </div>
</div>
<div class="row-fluid">
    <div class="span10 offset1">
        <div id="map_canvas" class="span12"></div>
    </div>
</div>

<!-- Modal -->
<div id="myModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-body">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"><img src="/Images/Story3/button_close.png" /> </button>
            <h3>&nbsp;</h3>
        </div>
        <div class="row-fluid background_div">
            <div id='adresseDetails'></div>
        </div>
        <div class="row-fluid span12" id='jqxNavigationBar'></div>
    </div>
</div>
